->method override is only possible for non static methods.
when a method of parent class is overrided in the child class then even after upcasting,the child class method is executed

if we implement this for Static method,then it is called method hiding
->and in this scenario,the method is executed according to refference var type




POLYMORPHISM:(many forms)
    object showing different behaviour and attributes.
    two types:
        1.Compiletime polymorphism
            ->method overloading
                    it comes under the compiletime polymorphism because ,binding is done during compiling
            ->method hiding
            ->Variable shadowing
            ->constructor overloading
        2.runtime polymorphism
            =>method Overriding
                because of late binding.(binding during runtime by jvm)
DATA ABSTRACTION:(with the help of class and interface)
    Hiding the implementation and showing the functionality is called data abstraction.

    class without abstract keyword is called concrete class
        concrete class can have nly have concrete methods(ie.methods with body)
    class with abstract is abstract class
        abstract class can have concrete methods and abstract methods.
    concrete method and abstract method
    
    For abstract class we cant create object
    either you should define the body of the abstract method or you should make child class also a abstract class
    
    

CONSTRUCTOR:
    constructor cant be inherited using extends
    to use parent class constructor in child constructor we use super() keyword.
    super keyword is implicitely included bby the compiler if the class is of no orgument constructor.



INTERFACE:
    Class to class ------->extends
    interface to interface------>extends
    class to interface ------>implements
   ---->   implement symbol
    -> extends symbol
 ###ABSTRACT METHOD CANT BE A STATIC FINAL AND PRIVATE